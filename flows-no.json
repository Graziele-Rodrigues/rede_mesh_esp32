[
    {
        "id": "fe162edfc74f05cc",
        "type": "tab",
        "label": "Rede MESH",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "18f9323d04fcc8b2",
        "type": "mqtt in",
        "z": "fe162edfc74f05cc",
        "name": "",
        "topic": "/topic/mesh/rssi",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "38ecf3d13bf18e0a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 220,
        "y": 200,
        "wires": [
            [
                "4ff73e15e3ada7d4",
                "bd68437f7ae2ba82",
                "0f99c5e88d6f4720"
            ]
        ]
    },
    {
        "id": "4ff73e15e3ada7d4",
        "type": "ui_chart",
        "z": "fe162edfc74f05cc",
        "name": "",
        "group": "fd8240562a77573a",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": " Gráfico de RSSI do nó pai",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 550,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "fd04755bc7b518fd",
        "type": "mqtt in",
        "z": "fe162edfc74f05cc",
        "name": "",
        "topic": "/topic/mesh/latency",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "38ecf3d13bf18e0a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 360,
        "wires": [
            [
                "cbcb47fee246dfcd",
                "34f71842cc81f379"
            ]
        ]
    },
    {
        "id": "bd68437f7ae2ba82",
        "type": "ui_gauge",
        "z": "fe162edfc74f05cc",
        "name": "",
        "group": "fd8240562a77573a",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "rssi",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 510,
        "y": 240,
        "wires": []
    },
    {
        "id": "cbcb47fee246dfcd",
        "type": "ui_numeric",
        "z": "fe162edfc74f05cc",
        "name": "",
        "label": "Latencia",
        "tooltip": "",
        "group": "fd8240562a77573a",
        "order": 10,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": 1,
        "className": "",
        "x": 500,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "8411537f177981b8",
        "type": "mqtt in",
        "z": "fe162edfc74f05cc",
        "name": "",
        "topic": "/topic/mesh/success_rate",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "38ecf3d13bf18e0a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 520,
        "wires": [
            [
                "0fcbf8e32df0c1d6",
                "c03289de6def833a"
            ]
        ]
    },
    {
        "id": "0fcbf8e32df0c1d6",
        "type": "ui_gauge",
        "z": "fe162edfc74f05cc",
        "name": "",
        "group": "fd8240562a77573a",
        "order": 7,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Taxa de sucesso ",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 550,
        "y": 520,
        "wires": []
    },
    {
        "id": "f8d9be4536bf9874",
        "type": "mqtt in",
        "z": "fe162edfc74f05cc",
        "name": "",
        "topic": "/topic/mesh/packet_loss",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "38ecf3d13bf18e0a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 220,
        "y": 660,
        "wires": [
            [
                "b68c2916027c8918",
                "2a21d4d355dd5946"
            ]
        ]
    },
    {
        "id": "b68c2916027c8918",
        "type": "ui_numeric",
        "z": "fe162edfc74f05cc",
        "name": "",
        "label": "Perda Pacotes",
        "tooltip": "",
        "group": "fd8240562a77573a",
        "order": 6,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": 1,
        "className": "",
        "x": 480,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "0f99c5e88d6f4720",
        "type": "debug",
        "z": "fe162edfc74f05cc",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 140,
        "wires": []
    },
    {
        "id": "34f71842cc81f379",
        "type": "debug",
        "z": "fe162edfc74f05cc",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 320,
        "wires": []
    },
    {
        "id": "c03289de6def833a",
        "type": "debug",
        "z": "fe162edfc74f05cc",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 460,
        "wires": []
    },
    {
        "id": "2a21d4d355dd5946",
        "type": "debug",
        "z": "fe162edfc74f05cc",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 600,
        "wires": []
    },
    {
        "id": "573d67a861533f26",
        "type": "mqtt in",
        "z": "fe162edfc74f05cc",
        "name": "",
        "topic": "/topic/route_table",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "38ecf3d13bf18e0a",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 910,
        "y": 220,
        "wires": [
            [
                "8b0ea0339583dd80",
                "61c636f4b158bb0a"
            ]
        ]
    },
    {
        "id": "8b0ea0339583dd80",
        "type": "debug",
        "z": "fe162edfc74f05cc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 180,
        "wires": []
    },
    {
        "id": "21fb2f687c873502",
        "type": "mqtt in",
        "z": "fe162edfc74f05cc",
        "name": "",
        "topic": "/topic/ip_mesh",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "38ecf3d13bf18e0a",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 860,
        "y": 440,
        "wires": [
            [
                "97aee0cc7523e74f",
                "1eafb341a22a1bf9"
            ]
        ]
    },
    {
        "id": "97aee0cc7523e74f",
        "type": "debug",
        "z": "fe162edfc74f05cc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 400,
        "wires": []
    },
    {
        "id": "61c636f4b158bb0a",
        "type": "ui_template",
        "z": "fe162edfc74f05cc",
        "group": "fd8240562a77573a",
        "name": "Tabela Roteamento",
        "order": 2,
        "width": "12",
        "height": "6",
        "format": "<table class=\"table\" id=\"routingTable\">\n    <thead>\n        <tr>\n            <th>MAC Address</th>\n        </tr>\n    </thead>\n    <tbody></tbody>\n</table>\n\n<script>\n    (function(scope) {\n        // Atualiza a tabela com os dados recebidos\n        scope.$watch('msg.payload', function(data) {\n            if (!data || !data.route_table || !Array.isArray(data.route_table)) {\n                console.error(\"Dados de tabela inválidos:\", data);\n                return;\n            }\n\n            // Limpa a tabela antes de adicionar novas linhas\n            const tableBody = document.querySelector(\"#routingTable tbody\");\n            tableBody.innerHTML = \"\";\n\n            // Adiciona cada MAC Address à tabela\n            data.route_table.forEach((mac) => {\n                const row = document.createElement(\"tr\");\n                const macCell = document.createElement(\"td\");\n\n                macCell.textContent = mac;\n                row.appendChild(macCell);\n                tableBody.appendChild(row);\n            });\n        });\n    })(scope);\n</script>\n\n<style>\n.table {\n    width: 100%;\n    overflow-y: auto; /* Permite rolagem apenas se necessário */\n    border-spacing: 5px; /* Espaço entre as células */\n    text-align: center;\n}\n\n.table th, .table td {\n    border: 1px solid #000;\n    padding: 12px; /* Aumenta o espaço interno */\n    height: 20px; /* Define uma altura mínima para as células */\n    vertical-align: middle; /* Garante alinhamento vertical centralizado */\n}\n\n.table th {\n    background-color: #f2f2f2;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1190,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "1eafb341a22a1bf9",
        "type": "ui_template",
        "z": "fe162edfc74f05cc",
        "group": "fd8240562a77573a",
        "name": "Nós na rede",
        "order": 3,
        "width": "12",
        "height": "6",
        "format": "<table class=\"table\" id=\"NosRede\">\n    <thead>\n        <tr>\n            <th>Layer</th>\n            <th>IP Address</th>\n        </tr>\n    </thead>\n    <tbody></tbody>\n</table>\n\n<script>\n    (function(scope) {\n        const tableBody = document.querySelector(\"#NosRede tbody\");\n        const ipMap = new Map(); // Armazena os IPs e suas layers\n\n        // Atualiza a tabela com os dados recebidos\n        scope.$watch('msg.payload', function(data) {\n            if (!data || typeof data !== 'string') {\n                console.error(\"Dados inválidos:\", data);\n                return;\n            }\n\n            const match = data.match(/layer:(\\d+) IP:([\\d\\.]+)/);\n            if (!match) {\n                console.error(\"Formato inesperado de dados:\", data);\n                return;\n            }\n\n            const layer = match[1];\n            const ip = match[2];\n\n            // Só adiciona ou atualiza se o IP for novo ou a layer mudar\n            if (!ipMap.has(ip) || ipMap.get(ip) !== layer) {\n                ipMap.set(ip, layer);\n                atualizarTabela();\n            }\n        });\n\n        function atualizarTabela() {\n            tableBody.innerHTML = \"\";\n            ipMap.forEach((layer, ip) => {\n                const row = document.createElement(\"tr\");\n                    row.innerHTML = `\n                    <td>${layer}</td>\n                    <td>${ip}</td>\n                    `;\n                tableBody.appendChild(row);\n            });\n        }\n    })(scope);\n</script>\n\n<style>\n.table {\n    width: 100%;\n    overflow-y: auto; /* Permite rolagem apenas se necessário */\n    border-spacing: 5px; /* Espaço entre as células */\n    text-align: center;\n}\n\n.table th, .table td {\n    border: 1px solid #000;\n    padding: 12px; /* Aumenta o espaço interno */\n    height: 20px; /* Define uma altura mínima para as células */\n    vertical-align: middle; /* Garante alinhamento vertical centralizado */\n}\n\n.table th {\n    background-color: #f2f2f2;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1150,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "78d73264acfcb5a2",
        "type": "mqtt in",
        "z": "fe162edfc74f05cc",
        "name": "",
        "topic": "/topic/mesh/bytes_received",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "38ecf3d13bf18e0a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 940,
        "wires": [
            [
                "72f805c1424aa461",
                "c83b5404dfcef93b"
            ]
        ]
    },
    {
        "id": "72f805c1424aa461",
        "type": "debug",
        "z": "fe162edfc74f05cc",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 880,
        "wires": []
    },
    {
        "id": "c83b5404dfcef93b",
        "type": "ui_numeric",
        "z": "fe162edfc74f05cc",
        "name": "",
        "label": "Bytes Recebidos",
        "tooltip": "",
        "group": "fd8240562a77573a",
        "order": 9,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": 1,
        "className": "",
        "x": 450,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "e6fc54197dd5257f",
        "type": "mqtt in",
        "z": "fe162edfc74f05cc",
        "name": "",
        "topic": "/topic/ip_mesh/key_pressed",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "38ecf3d13bf18e0a",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 1440,
        "y": 440,
        "wires": [
            [
                "d9acd47903cdaa93",
                "15b1bff4d650cf93"
            ]
        ]
    },
    {
        "id": "d9acd47903cdaa93",
        "type": "debug",
        "z": "fe162edfc74f05cc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1660,
        "y": 400,
        "wires": []
    },
    {
        "id": "15b1bff4d650cf93",
        "type": "ui_text",
        "z": "fe162edfc74f05cc",
        "group": "fd8240562a77573a",
        "order": 11,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "MAC botao acionado",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "Verdana,Verdana,Geneva,sans-serif",
        "fontSize": 16,
        "color": "#000000",
        "x": 1740,
        "y": 480,
        "wires": []
    },
    {
        "id": "b95c6de7b9a07bd5",
        "type": "mqtt out",
        "z": "fe162edfc74f05cc",
        "name": "",
        "topic": "/topic/mesh/restart",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "38ecf3d13bf18e0a",
        "x": 1630,
        "y": 260,
        "wires": []
    },
    {
        "id": "82f56e61572fb8e0",
        "type": "ui_button",
        "z": "fe162edfc74f05cc",
        "name": "",
        "group": "fd8240562a77573a",
        "order": 1,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Reinicia Rede Mesh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "restart_mesh",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1440,
        "y": 200,
        "wires": [
            [
                "b95c6de7b9a07bd5"
            ]
        ]
    },
    {
        "id": "8ac6e56597713494",
        "type": "mqtt in",
        "z": "fe162edfc74f05cc",
        "name": "",
        "topic": "/topic/mesh/hops",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "38ecf3d13bf18e0a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 800,
        "wires": [
            [
                "c5bdf1cb2df5c205",
                "7b184e8ebf3bd40b"
            ]
        ]
    },
    {
        "id": "c5bdf1cb2df5c205",
        "type": "ui_chart",
        "z": "fe162edfc74f05cc",
        "name": "",
        "group": "fd8240562a77573a",
        "order": 8,
        "width": 0,
        "height": 0,
        "label": "Numero de saltos",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 550,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "7b184e8ebf3bd40b",
        "type": "debug",
        "z": "fe162edfc74f05cc",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 740,
        "wires": []
    },
    {
        "id": "38ecf3d13bf18e0a",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt://mqtt.eclipseprojects.io",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "fd8240562a77573a",
        "type": "ui_group",
        "name": "Rede Mesh",
        "tab": "31235f87aab3a89d",
        "order": 1,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "31235f87aab3a89d",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]